const mysql = require('mysql2/promise');
require('dotenv').config();

async function setupDatabase() {
  let connection;
  
  try {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –µ—ë —Å–æ–∑–¥–∞–Ω–∏—è
    connection = await mysql.createConnection({
      host: process.env.DB_HOST || 'localhost',
      port: process.env.DB_PORT || 3306,
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || ''
    });

    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await connection.execute(`CREATE DATABASE IF NOT EXISTS ${process.env.DB_NAME || 'coffee_app'} CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci`);
    console.log('üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞');

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await connection.execute(`USE ${process.env.DB_NAME || 'coffee_app'}`);

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    await connection.execute(`
      CREATE TABLE IF NOT EXISTS categories (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        icon VARCHAR(50) NOT NULL,
        display_order INT DEFAULT 0,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
      )
    `);

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤
    await connection.execute(`
      CREATE TABLE IF NOT EXISTS products (
        id INT AUTO_INCREMENT PRIMARY KEY,
        category_id INT NOT NULL,
        name VARCHAR(200) NOT NULL,
        description TEXT,
        price DECIMAL(10,2) NOT NULL,
        image_url VARCHAR(500),
        available BOOLEAN DEFAULT true,
        featured BOOLEAN DEFAULT false,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE CASCADE
      )
    `);

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–∫–∞–∑–æ–≤
    await connection.execute(`
      CREATE TABLE IF NOT EXISTS orders (
        id INT AUTO_INCREMENT PRIMARY KEY,
        order_number VARCHAR(50) UNIQUE NOT NULL,
        total_price DECIMAL(10,2) NOT NULL,
        status ENUM('placed', 'preparing', 'ready', 'completed', 'cancelled') DEFAULT 'placed',
        customer_name VARCHAR(100),
        customer_phone VARCHAR(20),
        notes TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
      )
    `);

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–∑–∏—Ü–∏–π –∑–∞–∫–∞–∑–∞
    await connection.execute(`
      CREATE TABLE IF NOT EXISTS order_items (
        id INT AUTO_INCREMENT PRIMARY KEY,
        order_id INT NOT NULL,
        product_id INT NOT NULL,
        quantity INT NOT NULL DEFAULT 1,
        price DECIMAL(10,2) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE,
        FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
      )
    `);

    console.log('üìã –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã');

    // –í—Å—Ç–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    await connection.execute(`
      INSERT IGNORE INTO categories (id, name, icon, display_order) VALUES
      (1, '–ö–æ—Ñ–µ', '‚òïÔ∏è', 1),
      (2, '–î–µ—Å–µ—Ä—Ç—ã', 'üç∞', 2),
      (3, '–ó–∞–∫—É—Å–∫–∏', 'ü•™', 3),
      (4, '–ù–∞–ø–∏—Ç–∫–∏', 'ü•§', 4)
    `);

    // –í—Å—Ç–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    await connection.execute(`
      INSERT IGNORE INTO products (id, category_id, name, description, price, image_url, featured) VALUES
      -- –ö–æ—Ñ–µ
      (1, 1, '–≠—Å–ø—Ä–µ—Å—Å–æ', '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –∫–æ—Ñ–µ —Å –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–º –≤–∫—É—Å–æ–º', 150.00, 'https://example.com/espresso.jpg', true),
      (2, 1, '–ê–º–µ—Ä–∏–∫–∞–Ω–æ', '–≠—Å–ø—Ä–µ—Å—Å–æ —Å –≥–æ—Ä—è—á–µ–π –≤–æ–¥–æ–π, –º—è–≥–∫–∏–π –∏ –∞—Ä–æ–º–∞—Ç–Ω—ã–π', 180.00, 'https://example.com/americano.jpg', false),
      (3, 1, '–ö–∞–ø—É—á–∏–Ω–æ', '–≠—Å–ø—Ä–µ—Å—Å–æ —Å –≤–∑–±–∏—Ç—ã–º –º–æ–ª–æ–∫–æ–º –∏ –≤–æ–∑–¥—É—à–Ω–æ–π –ø–µ–Ω–∫–æ–π', 220.00, 'https://example.com/cappuccino.jpg', true),
      (4, 1, '–õ–∞—Ç—Ç–µ', '–ù–µ–∂–Ω—ã–π –∫–æ—Ñ–µ —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –º–æ–ª–æ–∫–∞', 250.00, 'https://example.com/latte.jpg', false),
      (5, 1, '–†–∞—Ñ', '–°–ª–∏–≤–æ—á–Ω—ã–π –∫–æ—Ñ–µ –ø–æ-—Ä—É—Å—Å–∫–∏ —Å –≤–∞–Ω–∏–ª—å—é', 280.00, 'https://example.com/raf.jpg', true),
      (6, 1, '–§–ª—ç—Ç –í–∞–π—Ç', '–î–≤–æ–π–Ω–æ–π —ç—Å–ø—Ä–µ—Å—Å–æ —Å –º–∏–∫—Ä–æ–ø–µ–Ω–∫–æ–π', 270.00, 'https://example.com/flatwhite.jpg', false),
      
      -- –î–µ—Å–µ—Ä—Ç—ã
      (7, 2, '–ß–∏–∑–∫–µ–π–∫', '–ù–µ–∂–Ω—ã–π —Ç–≤–æ—Ä–æ–∂–Ω—ã–π —Ç–æ—Ä—Ç —Å —è–≥–æ–¥–Ω—ã–º —Å–æ—É—Å–æ–º', 320.00, 'https://example.com/cheesecake.jpg', true),
      (8, 2, '–¢–∏—Ä–∞–º–∏—Å—É', '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–µ—Å–µ—Ä—Ç —Å –∫–æ—Ñ–µ –∏ –º–∞—Å–∫–∞—Ä–ø–æ–Ω–µ', 350.00, 'https://example.com/tiramisu.jpg', true),
      (9, 2, '–≠–∫–ª–µ—Ä', '–ó–∞–≤–∞—Ä–Ω–æ–µ –ø–∏—Ä–æ–∂–Ω–æ–µ —Å –∫—Ä–µ–º–æ–º', 180.00, 'https://example.com/eclair.jpg', false),
      (10, 2, '–ú–∞–∫–∞—Ä–æ–Ω', '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–æ–µ –º–∏–Ω–¥–∞–ª—å–Ω–æ–µ –ø–µ—á–µ–Ω—å–µ', 120.00, 'https://example.com/macaron.jpg', false),
      (11, 2, '–ü–∞–Ω–Ω–∞-–∫–æ—Ç—Ç–∞', '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –º–æ–ª–æ—á–Ω—ã–π –¥–µ—Å–µ—Ä—Ç', 290.00, 'https://example.com/pannacotta.jpg', false),
      
      -- –ó–∞–∫—É—Å–∫–∏
      (12, 3, '–ö—Ä—É–∞—Å—Å–∞–Ω —Å –≤–µ—Ç—á–∏–Ω–æ–π', '–°–≤–µ–∂–∞—è —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è –≤—ã–ø–µ—á–∫–∞ —Å –Ω–∞—á–∏–Ω–∫–æ–π', 200.00, 'https://example.com/croissant.jpg', false),
      (13, 3, '–°—ç–Ω–¥–≤–∏—á –∫–ª–∞–±', '–° –∫—É—Ä–∏—Ü–µ–π, –±–µ–∫–æ–Ω–æ–º –∏ –æ–≤–æ—â–∞–º–∏', 350.00, 'https://example.com/sandwich.jpg', true),
      (14, 3, '–°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä—å', '–°–≤–µ–∂–∏–π —Å–∞–ª–∞—Ç —Å –∫—É—Ä–∏—Ü–µ–π –∏ —Å—É—Ö–∞—Ä–∏–∫–∞–º–∏', 420.00, 'https://example.com/caesar.jpg', false),
      (15, 3, '–ë–∞–≥–µ—Ç —Å –ª–æ—Å–æ—Å–µ–º', '–°–≤–µ–∂–∏–π –±–∞–≥–µ—Ç —Å —Å–ª–∞–±–æ—Å–æ–ª–µ–Ω—ã–º –ª–æ—Å–æ—Å–µ–º', 450.00, 'https://example.com/salmon.jpg', true),
      
      -- –ù–∞–ø–∏—Ç–∫–∏
      (16, 4, '–ö–∞–∫–∞–æ', '–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫', 180.00, 'https://example.com/cocoa.jpg', false),
      (17, 4, '–ß–∞–π Earl Grey', '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —á–∞–π', 150.00, 'https://example.com/tea.jpg', false),
      (18, 4, '–°–º—É–∑–∏ –º–∞–Ω–≥–æ', '–û—Å–≤–µ–∂–∞—é—â–∏–π —Ñ—Ä—É–∫—Ç–æ–≤—ã–π —Å–º—É–∑–∏', 220.00, 'https://example.com/smoothie.jpg', true),
      (19, 4, '–õ–∏–º–æ–Ω–∞–¥', '–î–æ–º–∞—à–Ω–∏–π –ª–∏–º–æ–Ω–∞–¥ —Å –º—è—Ç–æ–π', 200.00, 'https://example.com/lemonade.jpg', false)
    `);

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!');
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const [categoriesCount] = await connection.execute('SELECT COUNT(*) as count FROM categories');
    const [productsCount] = await connection.execute('SELECT COUNT(*) as count FROM products');
    
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: ${categoriesCount[0].count}`);
    console.log(`   –¢–æ–≤–∞—Ä—ã: ${productsCount[0].count}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
    process.exit(1);
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
    }
  }
}

// –ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
setupDatabase(); 