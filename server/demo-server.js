const express = require('express');
const cors = require('cors');

const app = express();
const PORT = 3000;

// Middleware
app.use(cors());
app.use(express.json());

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–≤–º–µ—Å—Ç–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)
const categories = [
  { 
    id: 1, 
    name: '–ö–æ—Ñ–µ', 
    icon: '‚òï',
    display_order: 1,
    created_at: '2024-01-01T00:00:00.000Z',
    updated_at: '2024-01-01T00:00:00.000Z'
  },
  { 
    id: 2, 
    name: '–ß–∞–π', 
    icon: 'üçÉ',
    display_order: 2,
    created_at: '2024-01-01T00:00:00.000Z',
    updated_at: '2024-01-01T00:00:00.000Z'
  },
  { 
    id: 3, 
    name: '–î–µ—Å–µ—Ä—Ç—ã', 
    icon: 'üç∞',
    display_order: 3,
    created_at: '2024-01-01T00:00:00.000Z',
    updated_at: '2024-01-01T00:00:00.000Z'
  },
  { 
    id: 4, 
    name: '–í—ã–ø–µ—á–∫–∞', 
    icon: 'ü•ê',
    display_order: 4,
    created_at: '2024-01-01T00:00:00.000Z',
    updated_at: '2024-01-01T00:00:00.000Z'
  }
];

const products = [
  {
    id: 1,
    name: '–≠—Å–ø—Ä–µ—Å—Å–æ',
    price: 120.0,
    description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π —ç—Å–ø—Ä–µ—Å—Å–æ',
    category_id: 1,
    image_url: null,
    available: true,
    featured: true,
    category_name: '–ö–æ—Ñ–µ',
    category_icon: '‚òï',
    created_at: '2024-01-01T00:00:00.000Z',
    updated_at: '2024-01-01T00:00:00.000Z'
  },
  {
    id: 2,
    name: '–ö–∞–ø—É—á–∏–Ω–æ',
    price: 180.0,
    description: '–≠—Å–ø—Ä–µ—Å—Å–æ —Å –º–æ–ª–æ—á–Ω–æ–π –ø–µ–Ω–∫–æ–π',
    category_id: 1,
    image_url: null,
    available: true,
    featured: true,
    category_name: '–ö–æ—Ñ–µ',
    category_icon: '‚òï',
    created_at: '2024-01-01T00:00:00.000Z',
    updated_at: '2024-01-01T00:00:00.000Z'
  },
  {
    id: 3,
    name: '–õ–∞—Ç—Ç–µ',
    price: 200.0,
    description: '–ú—è–≥–∫–∏–π –∫–æ—Ñ–µ —Å –º–æ–ª–æ–∫–æ–º',
    category_id: 1,
    image_url: null,
    available: true,
    featured: false,
    category_name: '–ö–æ—Ñ–µ',
    category_icon: '‚òï',
    created_at: '2024-01-01T00:00:00.000Z',
    updated_at: '2024-01-01T00:00:00.000Z'
  },
  {
    id: 4,
    name: '–ê–º–µ—Ä–∏–∫–∞–Ω–æ',
    price: 150.0,
    description: '–≠—Å–ø—Ä–µ—Å—Å–æ —Å –≥–æ—Ä—è—á–µ–π –≤–æ–¥–æ–π',
    category_id: 1,
    image_url: null,
    available: true,
    featured: false,
    category_name: '–ö–æ—Ñ–µ',
    category_icon: '‚òï',
    created_at: '2024-01-01T00:00:00.000Z',
    updated_at: '2024-01-01T00:00:00.000Z'
  },
  {
    id: 5,
    name: '–ó–µ–ª–µ–Ω—ã–π —á–∞–π',
    price: 100.0,
    description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∑–µ–ª–µ–Ω—ã–π —á–∞–π',
    category_id: 2,
    image_url: null,
    available: true,
    featured: false,
    category_name: '–ß–∞–π',
    category_icon: 'üçÉ',
    created_at: '2024-01-01T00:00:00.000Z',
    updated_at: '2024-01-01T00:00:00.000Z'
  },
  {
    id: 6,
    name: '–ß–∏–∑–∫–µ–π–∫',
    price: 250.0,
    description: '–ù–µ–∂–Ω—ã–π —á–∏–∑–∫–µ–π–∫ —Å —è–≥–æ–¥–∞–º–∏',
    category_id: 3,
    image_url: null,
    available: true,
    featured: true,
    category_name: '–î–µ—Å–µ—Ä—Ç—ã',
    category_icon: 'üç∞',
    created_at: '2024-01-01T00:00:00.000Z',
    updated_at: '2024-01-01T00:00:00.000Z'
  },
  {
    id: 7,
    name: '–ö—Ä—É–∞—Å—Å–∞–Ω',
    price: 80.0,
    description: '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π –∫—Ä—É–∞—Å—Å–∞–Ω',
    category_id: 4,
    image_url: null,
    available: true,
    featured: false,
    category_name: '–í—ã–ø–µ—á–∫–∞',
    category_icon: 'ü•ê',
    created_at: '2024-01-01T00:00:00.000Z',
    updated_at: '2024-01-01T00:00:00.000Z'
  }
];

let orders = [];
let orderIdCounter = 1;

// API Routes

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
app.get('/api/categories', (req, res) => {
  console.log('üìÇ –ó–∞–ø—Ä–æ—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–π');
  res.json({
    success: true,
    data: categories
  });
});

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
app.get('/api/products', (req, res) => {
  console.log('üõçÔ∏è –ó–∞–ø—Ä–æ—Å –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤');
  let filteredProducts = [...products];
  
  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  if (req.query.category) {
    const categoryId = parseInt(req.query.category);
    filteredProducts = filteredProducts.filter(p => p.category_id === categoryId);
  }
  
  // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
  if (req.query.search) {
    const searchTerm = req.query.search.toLowerCase();
    filteredProducts = filteredProducts.filter(p => 
      p.name.toLowerCase().includes(searchTerm) || 
      p.description.toLowerCase().includes(searchTerm)
    );
  }
  
  res.json({
    success: true,
    data: filteredProducts
  });
});

// –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
app.get('/api/products/category/:categoryId', (req, res) => {
  const categoryId = parseInt(req.params.categoryId);
  console.log(`üè∑Ô∏è –ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categoryId}`);
  
  const categoryProducts = products.filter(p => p.category_id === categoryId);
  
  res.json({
    success: true,
    data: categoryProducts
  });
});

// –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã
app.get('/api/products/featured', (req, res) => {
  console.log('‚≠ê –ó–∞–ø—Ä–æ—Å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤');
  const featuredProducts = products.filter(p => p.featured);
  
  res.json({
    success: true,
    data: featuredProducts
  });
});

// –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑
app.post('/api/orders', (req, res) => {
  console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞:', req.body);
  
  const { items, customerName, customerPhone, notes } = req.body;
  
  if (!items || items.length === 0) {
    return res.status(400).json({
      success: false,
      message: '–ó–∞–∫–∞–∑ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–≤–∞—Ä—ã'
    });
  }
  
  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
  let totalPrice = 0;
  const orderItems = items.map(item => {
    const product = products.find(p => p.id === item.product_id);
    if (!product) {
      throw new Error(`–¢–æ–≤–∞—Ä —Å ID ${item.product_id} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
    
    const itemTotal = product.price * item.quantity;
    totalPrice += itemTotal;
    
    return {
      productId: item.product_id,
      name: product.name,
      price: product.price,
      quantity: item.quantity,
      total: itemTotal
    };
  });
  
  const order = {
    id: orderIdCounter++,
    orderNumber: `ORD-${Date.now()}`,
    totalPrice: totalPrice,
    status: 'placed',
    customerName: customerName || null,
    customerPhone: customerPhone || null,
    notes: notes || null,
    items: orderItems,
    itemsCount: items.length,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  };
  
  orders.push(order);
  
  res.json({
    success: true,
    data: order
  });
});

// –ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã
app.get('/api/orders', (req, res) => {
  console.log('üìã –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤');
  
  res.json({
    success: true,
    data: orders
  });
});

// –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞
app.get('/api/orders/:orderId', (req, res) => {
  const orderId = parseInt(req.params.orderId);
  console.log(`üîç –ó–∞–ø—Ä–æ—Å –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞ ${orderId}`);
  
  const order = orders.find(o => o.id === orderId);
  
  if (!order) {
    return res.status(404).json({
      success: false,
      message: '–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω'
    });
  }
  
  res.json({
    success: true,
    data: order
  });
});

// Health check
app.get('/api/health', (req, res) => {
  res.json({
    success: true,
    message: '–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç',
    timestamp: new Date().toISOString()
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404
app.use('*', (req, res) => {
  res.status(404).json({
    success: false,
    message: '–≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((error, req, res, next) => {
  console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
  res.status(500).json({
    success: false,
    message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, '0.0.0.0', () => {
  console.log('üöÄ –î–µ–º–æ-—Å–µ—Ä–≤–µ—Ä –∫–æ—Ñ–µ–π–Ω–∏ –∑–∞–ø—É—â–µ–Ω!');
  console.log(`üì° API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}/api`);
  console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:');
  console.log('   GET  /api/categories - –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π');
  console.log('   GET  /api/products - –í—Å–µ —Ç–æ–≤–∞—Ä—ã');
  console.log('   GET  /api/products/featured - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã');
  console.log('   GET  /api/products/category/:id - –¢–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
  console.log('   POST /api/orders - –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑');
  console.log('   GET  /api/orders - –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤');
  console.log('   GET  /api/health - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞');
  console.log('');
  console.log('‚úÖ –ì–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –æ—Ç iOS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!');
}); 